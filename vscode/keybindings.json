// Place your key bindings in this file to override the defaults
[
    {
        "key": "ctrl+k h",
        "command": "workbench.action.newGroupBelow"
    },
    {
        "key": "ctrl+k v",
        "command": "workbench.action.newGroupRight"
    },
    {
        "key": "ctrl+m ctrl+p",
        "command": "workbench.action.toggleMaximizedPanel",
    },
    {
        "key": "ctrl+8 ctrl+m",
        "command": "python.refactorExtractMethod"
    },
    {
        "key": "ctrl+8 ctrl+v",
        "command": "python.refactorExtractVariable"
    },
    {
        "key": "escape escape",
        "command": "-workbench.action.exitZenMode",
        "when": "inZenMode"
    },
    {
        "key": "ctrl+k ctrl+w",
        "command": "workbench.action.openWorkspace"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "-workbench.action.keybindingsReference"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "workbench.action.quickOpenRecent"
    },
    {
        "key": "ctrl+k ctrl+m",
        "command": "-workbench.extensions.action.showRecommendedKeymapExtensions"
    },
    {
        "key": "ctrl+k ctrl+u",
        "command": "-editor.action.removeCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+u",
        "command": "editor.action.transformToUppercase"
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "editor.action.transformToLowercase"
    },
    {
        "key": "ctrl+shift+pageup",
        "command": "-workbench.action.moveEditorLeftInGroup"
    },
    {
        "key": "ctrl+shift+pagedown",
        "command": "-workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "ctrl+k ctrl+shift+left",
        "command": "workbench.action.moveEditorToLeftGroup"
    },
    {
        "key": "ctrl+k ctrl+shift+right",
        "command": "workbench.action.moveEditorToRightGroup"
    },
    {
        "key": "ctrl+f ctrl+o",
        "command": "search.action.openInEditor"
    },
    {
        "key": "ctrl+f",
        "command": "actions.find",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-actions.find"
    },
    {
        "key": "ctrl+m g",
        "command": "workbench.action.minimizeOtherEditors"
    },
    {
        "key": "ctrl+l c",
        "command": "workbench.action.toggleCenteredLayout"
    },
    {
        "key": "ctrl+l 2",
        "command": "workbench.action.editorLayoutTwoColumns"
    },
    {
        "key": "ctrl+l 1",
        "command": "workbench.action.editorLayoutSingle"
    },
    {
        "key": "ctrl+l 3",
        "command": "workbench.action.editorLayoutThreeColumns"
    },
    {
        "key": "ctrl+n",
        "command": "-extension.vim_ctrl+n",
        "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-md-shortcut.toggleImage",
        "when": "editorTextFocus && markdownShortcuts:enabled"
    },
    {
        "key": "ctrl+right",
        "command": "cursorWordPartRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+right",
        "command": "cursorWordPartRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+left",
        "command": "cursorWordPartLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+left",
        "command": "cursorWordPartLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+backspace",
        "command": "deleteWordPartLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+backspace",
        "command": "deleteWordPartRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+numpad_add",
        "command": "editor.emmet.action.incrementNumberByOne"
    },
    {
        "key": "alt+numpad_subtract",
        "command": "editor.emmet.action.decrementNumberByOne"
    },
    {
        "key": "ctrl+t f5",
        "command": "java.test.editor.debug",
        "when": "editorFocus"
    },
    {
        "key": "f5",
        "command": "workbench.action.debug.continue",
        "when": "debugState != 'inactive'"
    },
    {
        "key": "ctrl+k shift+v",
        "command": "markdown.showPreviewToSide",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+k v",
        "command": "-markdown.showPreviewToSide",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+k shift+v",
        "command": "markdown.extension.closePreviewToSide",
        "when": "markdownPreviewFocus"
    },
    {
        "key": "ctrl+k v",
        "command": "-markdown.extension.closePreviewToSide",
        "when": "markdownPreviewFocus"
    },
    {
        "key": "ctrl+]",
        "command": "-editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+]",
        "command": "-markdown.extension.onIndentLines",
        "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+[",
        "command": "-editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+[",
        "command": "-markdown.extension.onOutdentLines",
        "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
    }
]